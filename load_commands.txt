------------------------------------------------------------------------------
Includes the commands for the creation of graph database
--------------------------------------------------------------------------------
CREATE CONSTRAINT ON (game:Game) ASSERT game.gameId IS UNIQUE
CREATE CONSTRAINT ON (openMove:OpenMove) ASSERT openMove.code IS UNIQUE
CREATE CONSTRAINT ON (tournament:Tournament) ASSERT tournament.name IS UNIQUE
CREATE CONSTRAINT ON (player:Player) ASSERT player.name IS UNIQUE
CREATE CONSTRAINT ON (position:Position) ASSERT position.fen IS UNIQUE

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MERGE (game:Game { gameId: row.GameNumber })
ON CREATE SET game.gameId = row.GameNumber,game.date=row.Date,game.result=row.Result,game.whiteElo=
row.WhiteElo,game.blackElo=row.BlackElo,game.halfMoves=row.HalfMoves,game.moves=row.Moves

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MERGE (openMove:OpenMove { code: row.ECO })
ON CREATE SET openMove.code = row.ECO,openMove.name=row.Opening

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MERGE (tournament:Tournament { name: row.Event })
ON CREATE SET tournament.name = row.Event,tournament.site = row.Site,tournament.date = row.EventDate

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MERGE (player:Player { name: row.White })
ON CREATE SET player.name = row.White

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MERGE (player:Player { name: row.Black })
ON CREATE SET player.name = row.Black

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MATCH (openMove { code: row.ECO }), (game { gameId: row.GameNumber })
MERGE (openMove)-[r:Opening]->(game)
RETURN openMove.name, type(r), game.gameId

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MATCH (tournament { name: row.Event }), (game { gameId: row.GameNumber })
MERGE (tournament)-[r:Include  { round: row.Round}]->(game)
RETURN tournament.name, type(r), game.gameId

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MATCH (player { name: row.White }), (game { gameId: row.GameNumber })
MERGE (player)-[r:Plays  { Color: 'White'}]->(game)
RETURN player.name, type(r), game.gameId

LOAD CSV WITH HEADERS FROM "file:///games.csv" AS row
MATCH (player { name: row.Black }), (game { gameId: row.GameNumber })
MERGE (player)-[r:Plays  { Color: 'Black'}]->(game)
RETURN player.name, type(r), game.gameId

LOAD CSV WITH HEADERS FROM "file:///moves.csv" AS row
MERGE (position:Position { fen: row.FEN })
ON CREATE SET position.fen = row.FEN

LOAD CSV WITH HEADERS FROM "file:///moves.csv" AS row
MATCH (game { gameId: row.GameNumber }), (position { fen: row.FEN })
MERGE (game)-[r:Move  { moveId: row.MoveNumber, gameId: row.GameNumber, moveName: row.Move}]->(position)
RETURN game.gameId, type(r), position.fen
